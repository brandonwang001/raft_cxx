// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_rpc.proto

#include "raft_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace raft {
class AppendEntriesReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesReq> _instance;
} _AppendEntriesReq_default_instance_;
class AppendEntriesRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesResp> _instance;
} _AppendEntriesResp_default_instance_;
}  // namespace raft
static void InitDefaultsAppendEntriesReq_raft_5frpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raft::_AppendEntriesReq_default_instance_;
    new (ptr) ::raft::AppendEntriesReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raft::AppendEntriesReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesReq_raft_5frpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendEntriesReq_raft_5frpc_2eproto}, {}};

static void InitDefaultsAppendEntriesResp_raft_5frpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raft::_AppendEntriesResp_default_instance_;
    new (ptr) ::raft::AppendEntriesResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raft::AppendEntriesResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesResp_raft_5frpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendEntriesResp_raft_5frpc_2eproto}, {}};

void InitDefaults_raft_5frpc_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesReq_raft_5frpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesResp_raft_5frpc_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_raft_5frpc_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_raft_5frpc_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_raft_5frpc_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_raft_5frpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::raft::AppendEntriesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::raft::AppendEntriesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::raft::AppendEntriesReq)},
  { 5, -1, sizeof(::raft::AppendEntriesResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::raft::_AppendEntriesReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raft::_AppendEntriesResp_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_raft_5frpc_2eproto = {
  {}, AddDescriptors_raft_5frpc_2eproto, "raft_rpc.proto", schemas,
  file_default_instances, TableStruct_raft_5frpc_2eproto::offsets,
  file_level_metadata_raft_5frpc_2eproto, 2, file_level_enum_descriptors_raft_5frpc_2eproto, file_level_service_descriptors_raft_5frpc_2eproto,
};

const char descriptor_table_protodef_raft_5frpc_2eproto[] =
  "\n\016raft_rpc.proto\022\004raft\"\022\n\020AppendEntriesR"
  "eq\"\023\n\021AppendEntriesResp2J\n\004Raft\022B\n\rAppen"
  "dEntries\022\026.raft.AppendEntriesReq\032\027.raft."
  "AppendEntriesResp\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_raft_5frpc_2eproto = {
  false, InitDefaults_raft_5frpc_2eproto, 
  descriptor_table_protodef_raft_5frpc_2eproto,
  "raft_rpc.proto", &assign_descriptors_table_raft_5frpc_2eproto, 147,
};

void AddDescriptors_raft_5frpc_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_raft_5frpc_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_raft_5frpc_2eproto = []() { AddDescriptors_raft_5frpc_2eproto(); return true; }();
namespace raft {

// ===================================================================

void AppendEntriesReq::InitAsDefaultInstance() {
}
class AppendEntriesReq::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesReq::AppendEntriesReq()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:raft.AppendEntriesReq)
}
AppendEntriesReq::AppendEntriesReq(const AppendEntriesReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:raft.AppendEntriesReq)
}

void AppendEntriesReq::SharedCtor() {
}

AppendEntriesReq::~AppendEntriesReq() {
  // @@protoc_insertion_point(destructor:raft.AppendEntriesReq)
  SharedDtor();
}

void AppendEntriesReq::SharedDtor() {
}

void AppendEntriesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppendEntriesReq& AppendEntriesReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AppendEntriesReq_raft_5frpc_2eproto.base);
  return *internal_default_instance();
}


void AppendEntriesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raft.AppendEntriesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppendEntriesReq::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AppendEntriesReq*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppendEntriesReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raft.AppendEntriesReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:raft.AppendEntriesReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raft.AppendEntriesReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppendEntriesReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raft.AppendEntriesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:raft.AppendEntriesReq)
}

::google::protobuf::uint8* AppendEntriesReq::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:raft.AppendEntriesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft.AppendEntriesReq)
  return target;
}

size_t AppendEntriesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raft.AppendEntriesReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raft.AppendEntriesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesReq* source =
      ::google::protobuf::DynamicCastToGenerated<AppendEntriesReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raft.AppendEntriesReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raft.AppendEntriesReq)
    MergeFrom(*source);
  }
}

void AppendEntriesReq::MergeFrom(const AppendEntriesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raft.AppendEntriesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AppendEntriesReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raft.AppendEntriesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesReq::CopyFrom(const AppendEntriesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft.AppendEntriesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesReq::IsInitialized() const {
  return true;
}

void AppendEntriesReq::Swap(AppendEntriesReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesReq::InternalSwap(AppendEntriesReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesReq::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_raft_5frpc_2eproto);
  return ::file_level_metadata_raft_5frpc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesResp::InitAsDefaultInstance() {
}
class AppendEntriesResp::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesResp::AppendEntriesResp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:raft.AppendEntriesResp)
}
AppendEntriesResp::AppendEntriesResp(const AppendEntriesResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:raft.AppendEntriesResp)
}

void AppendEntriesResp::SharedCtor() {
}

AppendEntriesResp::~AppendEntriesResp() {
  // @@protoc_insertion_point(destructor:raft.AppendEntriesResp)
  SharedDtor();
}

void AppendEntriesResp::SharedDtor() {
}

void AppendEntriesResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppendEntriesResp& AppendEntriesResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AppendEntriesResp_raft_5frpc_2eproto.base);
  return *internal_default_instance();
}


void AppendEntriesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:raft.AppendEntriesResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppendEntriesResp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AppendEntriesResp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppendEntriesResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raft.AppendEntriesResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:raft.AppendEntriesResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raft.AppendEntriesResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppendEntriesResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raft.AppendEntriesResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:raft.AppendEntriesResp)
}

::google::protobuf::uint8* AppendEntriesResp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:raft.AppendEntriesResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft.AppendEntriesResp)
  return target;
}

size_t AppendEntriesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raft.AppendEntriesResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raft.AppendEntriesResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesResp* source =
      ::google::protobuf::DynamicCastToGenerated<AppendEntriesResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raft.AppendEntriesResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raft.AppendEntriesResp)
    MergeFrom(*source);
  }
}

void AppendEntriesResp::MergeFrom(const AppendEntriesResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raft.AppendEntriesResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AppendEntriesResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raft.AppendEntriesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesResp::CopyFrom(const AppendEntriesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft.AppendEntriesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesResp::IsInitialized() const {
  return true;
}

void AppendEntriesResp::Swap(AppendEntriesResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesResp::InternalSwap(AppendEntriesResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesResp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_raft_5frpc_2eproto);
  return ::file_level_metadata_raft_5frpc_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace raft
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::raft::AppendEntriesReq* Arena::CreateMaybeMessage< ::raft::AppendEntriesReq >(Arena* arena) {
  return Arena::CreateInternal< ::raft::AppendEntriesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::raft::AppendEntriesResp* Arena::CreateMaybeMessage< ::raft::AppendEntriesResp >(Arena* arena) {
  return Arena::CreateInternal< ::raft::AppendEntriesResp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
